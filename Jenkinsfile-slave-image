#!groovy

def timestamp = java.time.Instant.now().toEpochMilli();

pipeline {
  agent any
  options {
    durabilityHint('PERFORMANCE_OPTIMIZED')
    buildDiscarder logRotator( numToKeepStr: '30' )
  }  
  triggers {
    cron '@weekly'
  }
  stages {
    stage("Docker build and push") {
      agent { node { label 'linux' } }
      steps {
          withCredentials([usernamePassword(credentialsId: 'DockerHubPwd', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD'),
                           usernamePassword(credentialsId: 'nexus-cred', usernameVariable: 'USERNAME_NEXUS', passwordVariable: 'PASSWORD_NEXUS')]) {
            sh "docker login -u $USERNAME -p $PASSWORD"
            sh "docker build --no-cache --tag=jetty-build-agent:latest slave-image/"
            sh "docker tag jetty-build-agent:latest jettyproject/jetty-build-agent:$timestamp"
            sh "docker push jettyproject/jetty-build-agent:$timestamp"
            sh "docker logout"

            sh "docker login -u $USERNAME -p $PASSWORD 10.0.0.12:8083"
            sh "docker tag jetty-build-agent:latest 10.0.0.12:8083/jettyproject/jetty-build-agent:$timestamp"
            sh "docker push 10.0.0.12:8083/jettyproject/jetty-build-agent:$timestamp"
            sh "docker logout"

            script {
              def imageName = Jenkins.instance.clouds.getByName("kubernetes").templates.find { it.name.equals("jenkins-slave") }.containers.find { it.name.equals("jnlp") }.image;
              echo "imageName before: $imageName"
              //Jenkins.instance.clouds.getByName("kubernetes").templates.find { it.name.equals("jenkins-slave") }.containers.find { it.name.equals("jnlp") }.image = "jettyproject/jetty-build-agent:" + timestamp
              //Jenkins.instance.save()
              imageName = Jenkins.instance.clouds.getByName("kubernetes").templates.find { it.name.equals("jenkins-slave") }.containers.find { it.name.equals("jnlp") }.image;
              echo "imageName after: $imageName"
            }
          }
      }
    }
  }
}
// vim: et:ts=2:sw=2:ft=groovy
